:root {
  --red: #ff4848;
  --green: #00bf63;
  --yellow: #ffc72c;
  --blue: #299eff;
}
html, body{
  scroll-behavior: smooth;
}
body{
  overflow: hidden !important;
}

body::-webkit-scrollbar,
[role="main"]::-webkit-scrollbar,
[role="complementary"]::-webkit-scrollbar {
  width: 1rem;
}
body::-webkit-scrollbar-track,
[role="main"]::-webkit-scrollbar-track,
[role="complementary"]::-webkit-scrollbar-track {
  background: hsl(220, 24%, 20%);
}
body::-webkit-scrollbar-thumb,
[role="main"]::-webkit-scrollbar-thumb,
[role="complementary"]::-webkit-scrollbar-thumb {
  background: hsl(157.14deg 72.41% 30%);
}
body::-webkit-scrollbar-thumb:hover,
[role="main"]::-webkit-scrollbar-thumb:hover,
[role="complementary"]::-webkit-scrollbar-thumb:hover {
  background: hsl(157.14deg 72.41% 20%);
}

a{
  text-decoration: none !important;
}

.sidebar-right > div[role="main"] {
  position: relative;
  padding-top: 5rem;
  width: 80% !important;
}


/* banners */

#billboard{
  display: none;
}

/* banners end */



#docs-content {
  margin-inline: 7rem !important;
}

.sidebar-right > div[role="main"] p {
  font-size: 1.8rem;
  line-height: 2.6rem;
  margin-block: 1.5em;
}

#version-switcher > ul {
  opacity: 0;
}

#doc-versions {
  transform: translateY(0%) !important;
}

#doc-languages {
  transform: translateY(0%) !important;
}

#faq-link {
  transform: translateY(0%) !important;
}

#backtotop-link {
  opacity: 1 !important;
}

.highlight-pycon {
  margin-block: 4rem;
}

.highlight .go {
  display: block;
  margin-block: 1rem;
}
.highlight .go:last-child {
  margin-bottom: 0 !important;
}

.highlight pre {
  margin: 30px 35px !important;
}

/* sidebar */
.sidebar-right {
  position: sticky;
  top: 0;

  display: flex;
  flex-direction: row-reverse;
  
  height: 100vh;
  max-width: none;
  
  padding: 0 !important;
  overflow: hidden;
}

.sidebar-right > [role="main"]{
  overflow: auto;
  min-height: unset;
} 

.sidebar-right > [role="complementary"] {
  float: unset;

  flex-grow: 1;

  background-color: #181d27;
  border-radius: 5px;

  width: 20%;

  margin-left: 5rem !important;
  padding-inline: 2rem;
  padding-bottom: 0;
  z-index: 999;
  overflow-y: auto;
}

.browse-horizontal{
  margin-inline: 7.5rem;
}

#top,
.fundraising-sidebar,
#getting-help-sidebar,
.list-links,
.list-links + h2,
.list-links + h2 + p,
[role="contentinfo"] {
  display: none !important;
}




/* close btn for sidebar */

.close-button {
  position: absolute;
  top: 2rem;
  left: 7rem;

  font-size: 2.5rem;
  font-weight: 600;

  cursor: pointer;
  transition: all 0.35s ease-in-out;
}

.button-closed{
  transform: rotate(180deg);
}




/* closed sidebar */

.closed {
  position: unset !important;
  height: auto !important;
}

.closed > div[role="main"] {
  max-height: 100vh;
  width: 100% !important;
  padding-inline: 23rem !important;
}

.closed > div[role="complementary"] {
  width: 0 !important;
  padding: 0 !important;
  margin: 0 !important;
  opacity: 0 !important;
  overflow: hidden !important;
  pointer-events: none !important;
}




/* search input  */

.form-input{
  position: absolute;
  top: 1rem;
  right: 9rem;
  width: 33rem;

  margin: 0 !important;
}

.form-input > input{
  padding: 6px 18% 6px 10px !important;
  font-size: 1.3rem !important;
}

.copy-banner{
  display: none;
}

.copy-banner > .container{
  margin: 0 !important;
}

.container > h1 {
  font-size: 2.5rem !important;
}







.section > h3 {
  font-size: 2.8rem;
  text-decoration: underline;
  text-underline-offset: 0.5rem;
  margin-bottom: 4rem !important;
}

#docs-content .section{
  margin-block: 3rem !important;
}









@media only screen and (max-width: 1200px) {
  .closed > div[role="main"] {
    padding-inline: 15rem !important;
  }
}

@media only screen and (max-width: 900px) {
  .closed > div[role="main"] {
    padding-inline: 3rem !important;
  }
}




/* marker */

.button-container{
  display: block;
}
.button-container > button {
  position: relative;
  padding: 0.8rem 2rem;
  border: none;
  color: white;
  border-radius: 4px;

  background: linear-gradient(
    18deg,
    var(--green) 30%,
    rgba(255, 255, 255, 1) 30%,
    rgba(255, 255, 255, 1) 34%,
    var(--blue) 34%,
    var(--blue) 66%,
    rgba(255, 255, 255, 1) 66%,
    rgba(255, 255, 255, 1) 70%,
    var(--yellow) 70%
  );
  background-size: 400% 300%;
  background-repeat: no-repeat;
  background-position: 0% 0%;

  cursor: pointer;
  transition: all 0.25s ease-in-out;
}
.button-container.completed > button {
  background-position: 0% 100%;
}
.button-container.doubt > button {
  background-position: 100% 0%;
}
.marker {
  position: fixed;
  right: 10px;
  width: 8px;
  height: 0px;
  transition: all 0.25s ease-in-out;
  background-color: #00bf63;
}
.marker > img {
  position: absolute;
  top: -5px;
  right: -1px;
  transform: translateY(-45%);
  cursor: pointer;
  width: 30px;
}

.marker > img:hover {
  transform: scale(1.1) translateY(-45%) !important;
}

.marker > img.front {
  animation: front 0.8s ease-in-out both;
}

@keyframes front {
  50% {
    transform: translateY(-126%) scale(0.8);
  }
  100% {
    transform: translateY(-45%) scale(1);
    z-index: 3;
  }
}

.button-container {
  width: max-content;
  position: relative;

  margin-top: 1.5rem;
}
.button-container:hover > .doubt-container {
  top: -23px;
  right: -20px;
  transform: rotate(15deg);
}
.doubt-container:hover {
  top: -23px;
  right: -20px;
  transform: rotate(15deg);
}
.doubt-container {
  position: absolute;
  top: 0px;
  right: 0px;
  width: 1.2rem;
  cursor: pointer;
  transition: all 0.25s ease-in-out;
}
.button-container > .doubt-container > svg > path {
  stroke: var(--blue);
}
.button-container > .doubt-container > svg > circle {
  fill: var(--blue);
}
.button-container.completed > .doubt-container > svg > path {
  stroke: var(--green);
}
.button-container.completed > .doubt-container > svg > circle {
  fill: var(--green);
}
.button-container.doubt > .doubt-container > svg > path {
  stroke: var(--yellow);
}
.button-container.doubt > .doubt-container > svg > circle {
  fill: var(--yellow);
}


svg > *{
  transition: all 0.25s ease-in-out;
  stroke: var(--blue);
}
svg:hover > path {
  d: path("m 10 20 a 5 5 0 0 1 20 0 s 1 10 -10 11 l 0 15");
  stroke: var(--yellow) !important;
}
svg:hover > circle {
  r: 8;
  fill: var(--yellow) !important;
}